/* automatically generated by rust-bindgen 0.70.1 */

#![allow(
    dead_code,
    non_camel_case_types,
    non_upper_case_globals,
    non_snake_case
)]
use crate::{arch::NXByteOrder, fat::*, loader::*, nlist::*, ranlib::*, reloc::*};

extern "C" {
    pub fn swap_fat_header(fat_header: *mut fat_header, target_byte_order: NXByteOrder);
    pub fn swap_fat_arch(fat_archs: *mut fat_arch, nfat_arch: u32, target_byte_order: NXByteOrder);
    pub fn swap_fat_arch_64(
        fat_archs64: *mut fat_arch_64,
        nfat_arch: u32,
        target_byte_order: NXByteOrder,
    );
    pub fn swap_mach_header(mh: *mut mach_header, target_byte_order: NXByteOrder);
    pub fn swap_mach_header_64(mh: *mut mach_header_64, target_byte_order: NXByteOrder);
    pub fn swap_load_command(lc: *mut load_command, target_byte_order: NXByteOrder);
    pub fn swap_segment_command(sg: *mut segment_command, target_byte_order: NXByteOrder);
    pub fn swap_segment_command_64(sg: *mut segment_command_64, target_byte_order: NXByteOrder);
    pub fn swap_section(s: *mut section, nsects: u32, target_byte_order: NXByteOrder);
    pub fn swap_section_64(s: *mut section_64, nsects: u32, target_byte_order: NXByteOrder);
    pub fn swap_symtab_command(st: *mut symtab_command, target_byte_order: NXByteOrder);
    pub fn swap_dysymtab_command(dyst: *mut dysymtab_command, target_byte_sex: NXByteOrder);
    pub fn swap_symseg_command(ss: *mut symseg_command, target_byte_order: NXByteOrder);
    pub fn swap_fvmlib_command(fl: *mut fvmlib_command, target_byte_order: NXByteOrder);
    pub fn swap_dylib_command(dl: *mut dylib_command, target_byte_sex: NXByteOrder);
    pub fn swap_sub_framework_command(
        sub: *mut sub_framework_command,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_sub_umbrella_command(usub: *mut sub_umbrella_command, target_byte_sex: NXByteOrder);
    pub fn swap_sub_library_command(lsub: *mut sub_library_command, target_byte_sex: NXByteOrder);
    pub fn swap_sub_client_command(csub: *mut sub_client_command, target_byte_sex: NXByteOrder);
    pub fn swap_prebound_dylib_command(
        pbdylib: *mut prebound_dylib_command,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_dylinker_command(dyld: *mut dylinker_command, target_byte_sex: NXByteOrder);
    pub fn swap_fvmfile_command(ff: *mut fvmfile_command, target_byte_order: NXByteOrder);
    pub fn swap_thread_command(ut: *mut thread_command, target_byte_order: NXByteOrder);
    pub fn swap_ident_command(ident: *mut ident_command, target_byte_order: NXByteOrder);
    pub fn swap_routines_command(r_cmd: *mut routines_command, target_byte_sex: NXByteOrder);
    pub fn swap_routines_command_64(r_cmd: *mut routines_command_64, target_byte_sex: NXByteOrder);
    pub fn swap_twolevel_hints_command(
        hints_cmd: *mut twolevel_hints_command,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_prebind_cksum_command(
        cksum_cmd: *mut prebind_cksum_command,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_uuid_command(uuid_cmd: *mut uuid_command, target_byte_sex: NXByteOrder);
    pub fn swap_linkedit_data_command(ld: *mut linkedit_data_command, target_byte_sex: NXByteOrder);
    pub fn swap_version_min_command(
        ver_cmd: *mut version_min_command,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_rpath_command(rpath_cmd: *mut rpath_command, target_byte_sex: NXByteOrder);
    pub fn swap_encryption_command(ec: *mut encryption_info_command, target_byte_sex: NXByteOrder);
    pub fn swap_encryption_command_64(
        ec: *mut encryption_info_command_64,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_linker_option_command(lo: *mut linker_option_command, target_byte_sex: NXByteOrder);
    pub fn swap_dyld_info_command(ed: *mut dyld_info_command, target_byte_sex: NXByteOrder);
    pub fn swap_entry_point_command(ep: *mut entry_point_command, target_byte_sex: NXByteOrder);
    pub fn swap_source_version_command(
        sv: *mut source_version_command,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_note_command(nc: *mut note_command, target_byte_sex: NXByteOrder);
    pub fn swap_build_version_command(bv: *mut build_version_command, target_byte_sex: NXByteOrder);
    pub fn swap_build_tool_version(
        bt: *mut build_tool_version,
        ntools: u32,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_twolevel_hint(hints: *mut twolevel_hint, nhints: u32, target_byte_sex: NXByteOrder);
    pub fn swap_fileset_entry_command(lc: *mut fileset_entry_command, target_byte_sex: NXByteOrder);
    pub fn swap_nlist(symbols: *mut nlist, nsymbols: u32, target_byte_order: NXByteOrder);
    pub fn swap_nlist_64(symbols: *mut nlist_64, nsymbols: u32, target_byte_order: NXByteOrder);
    pub fn swap_ranlib(ranlibs: *mut ranlib, nranlibs: u32, target_byte_order: NXByteOrder);
    pub fn swap_ranlib_64(ranlibs: *mut ranlib_64, nranlibs: u64, target_byte_order: NXByteOrder);
    pub fn swap_relocation_info(
        relocs: *mut relocation_info,
        nrelocs: u32,
        target_byte_order: NXByteOrder,
    );
    pub fn swap_indirect_symbols(
        indirect_symbols: *mut u32,
        nindirect_symbols: u32,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_dylib_reference(
        refs: *mut dylib_reference,
        nrefs: u32,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_dylib_module(mods: *mut dylib_module, nmods: u32, target_byte_sex: NXByteOrder);
    pub fn swap_dylib_module_64(
        mods: *mut dylib_module_64,
        nmods: u32,
        target_byte_sex: NXByteOrder,
    );
    pub fn swap_dylib_table_of_contents(
        tocs: *mut dylib_table_of_contents,
        ntocs: u32,
        target_byte_sex: NXByteOrder,
    );
}
